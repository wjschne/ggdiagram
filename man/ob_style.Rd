% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/style.R
\name{ob_style}
\alias{ob_style}
\title{ob_style class}
\usage{
ob_style(
  id = character(0),
  alpha = numeric(0),
  angle = numeric(0),
  arrow_head = list(),
  arrow_fins = list(),
  arrow_mid = list(),
  color = character(0),
  family = character(0),
  fill = character(0),
  fontface = character(0),
  hjust = numeric(0),
  justify = numeric(0),
  label.color = character(0),
  label.margin = list(),
  label.padding = list(),
  label.r = numeric(0),
  label.size = numeric(0),
  arrowhead_length = numeric(0),
  length_head = numeric(0),
  length_fins = numeric(0),
  length_mid = numeric(0),
  lineend = numeric(0),
  lineheight = numeric(0),
  linejoin = numeric(0),
  linewidth_fins = numeric(0),
  linewidth_head = numeric(0),
  linewidth = numeric(0),
  linetype = numeric(0),
  n = numeric(0),
  nudge_x = numeric(0),
  nudge_y = numeric(0),
  polar_just = numeric(0),
  resect = numeric(0),
  resect_fins = numeric(0),
  resect_head = numeric(0),
  shape = numeric(0),
  size = numeric(0),
  size.unit = numeric(0),
  straight = logical(0),
  stroke = numeric(0),
  stroke_color = character(0),
  stroke_width = numeric(0),
  text.color = character(0),
  vjust = numeric(0),
  ...
)
}
\arguments{
\item{id}{character string to identify object}

\item{alpha}{numeric value for alpha transparency}

\item{angle}{angle of text}

\item{arrow_head}{A 2-column matrix of polygon points}

\item{arrow_fins}{A 2-column matrix of polygon points}

\item{arrow_mid}{A 2-column matrix of polygon points}

\item{color}{character string for color}

\item{family}{font family}

\item{fill}{character string for fill color}

\item{fontface}{Can be plain, bold, italic, or bold.italic}

\item{hjust}{horizontal justification. 0 means left justified, 1 means right justified, 0.5 means horizontally centered}

\item{justify}{A numeric(1) between 0 and 1 to control where the arrows should be drawn relative to the path's endpoints. A value of 0 sets the arrow's tips at the path's end, whereas a value of 1 sets the arrow's base at the path's end. From ggarrow.}

\item{label.color}{Color of label outline.}

\item{label.margin}{Amount of distance around label. Unit vector of length four. Usually created with \code{ggplot2::margin}.}

\item{label.padding}{Amount of padding around label. Unit vector of length four. Usually created with \code{ggplot2::margin}.}

\item{label.r}{Radius of rounded corners. Defaults to 0.15 lines.}

\item{label.size}{Width of label outline.}

\item{arrowhead_length}{Determines the size of the arrow ornaments. This parameter becomes the \code{length} parameter in ggarrow functions. Numeric values set the ornament size relative to the linewidth. A unit value sets the ornament size in an absolute manner.}

\item{length_head}{Determines the size of the arrow head. Numeric values set the ornament size relative to the linewidth. A unit value sets the ornament size in an absolute manner. From ggarrow.}

\item{length_fins}{Determines the size of the arrow fins. Numeric values set the ornament size relative to the linewidth. A unit value sets the ornament size in an absolute manner. From ggarrow.}

\item{length_mid}{Determines the size of the middle arrows. Numeric values set the ornament size relative to the linewidth. A unit value sets the ornament size in an absolute manner. From ggarrow.}

\item{lineend}{Line end style (round, butt, square).}

\item{lineheight}{Height of line of text}

\item{linejoin}{Line join style (round, mitre, bevel).}

\item{linewidth_fins}{Line width for arrow fins}

\item{linewidth_head}{Line width for arrow fins}

\item{linewidth}{Width of lines}

\item{linetype}{type of lines}

\item{n}{Number of points in a polygon, circle, arc, or ellipse}

\item{nudge_x}{Horizontal adjustment to nudge labels by.}

\item{nudge_y}{Vertical adjustment to nudge labels by.}

\item{polar_just}{an angle, polar point, or point that alters hjust and vjust (polar polar_just not stored in style)}

\item{resect}{A numeric(1) denoting millimeters or \if{html}{\out{<unit>}} to shorten the arrow head and fins.}

\item{resect_fins}{A numeric(1) denoting millimeters or \if{html}{\out{<unit>}} to shorten the arrow fins}

\item{resect_head}{A numeric(1) denoting millimeters or \if{html}{\out{<unit>}} to shorten the arrow head.}

\item{shape}{Point shape type. Can be specified with an integer (between 0 and 25), a single character (which uses that character as the plotting symbol), a . to draw the smallest rectangle that is visible (i.e., about one pixel), an NA to draw nothing, or a mapping to a discrete variable.}

\item{size}{numeric size}

\item{size.unit}{How the size aesthetic is interpreted: as points ("pt"), millimeters ("mm"), centimeters ("cm"), inches ("in"), or picas ("pc").}

\item{straight}{logical. If TRUE, make bzpath label text straight instead of curved.}

\item{stroke}{Width of point border line}

\item{stroke_color}{Color of point border line}

\item{stroke_width}{Stroke width in arrows}

\item{text.color}{Color of label text.}

\item{vjust}{vertical justification. 0 means bottom aligned, 1 means top aligned, 0.5 means vertically centered}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> unused}
}
\value{
ob_style object
}
\description{
ob_style class
}
